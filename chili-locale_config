#!/usr/bin/env bash

# Cores - Substitua pelos códigos ANSI do seu terminal, se necessário
GREEN="\033[1;32m"   # Verde
RED="\033[1;31m"     # Vermelho
YELLOW="\033[1;33m"  # Amarelo
BLUE="\033[1;34m"    # Azul
MAGENTA="\033[1;35m" # Magenta
CYAN="\033[1;36m"    # Ciano
RESET="\033[0m"      # Resetar as cores

function sh_main {
   # Função para configurar uma variável no arquivo /etc/locale.conf
   # Se a variável já existir, substitui o valor. Senão, acrescenta ao arquivo.
   # Parâmetros: $1 = nome da variável, $2 = valor do idioma, $3 = descrição da variável
   function configure_locale_var {
      if grep -q "^$1=" /etc/locale.conf; then
         printf "${CYAN}=> Variável %s já existe. Substituindo o seu valor.${RESET}\n" "$3"
         sudo sed -i "s/^$1=.*/$1=$2/" /etc/locale.conf
      else
         printf "${CYAN}=> Variável %s não existe. Acrescentando ao arquivo.${RESET}\n" "$3"
         echo "$1=$2" | sudo tee -a /etc/locale.conf
      fi
   }

   lang=$1
   lang_utf8="$lang.UTF-8"

   # Verifica se o arquivo /etc/locale.conf existe
   if [[ -e /etc/locale.conf ]]; then
      # Obtém os valores atuais de LANG e LANGUAGE do arquivo /etc/locale.conf
      current_lang=$(grep '^LANG=' /etc/locale.conf | cut -d'=' -f2)
      current_language=$(grep '^LANGUAGE=' /etc/locale.conf | cut -d'=' -f2)

      # Verifica se os valores atuais são diferentes dos valores que seriam configurados
      if [[ "$current_lang" != "$lang_utf8" || "$current_language" != "$lang_utf8" ]]; then
         printf "${CYAN}=> Configurando localectl com LANG=${YELLOW}%s.UTF-8${RESET}\n" "$lang"

         if localectl set-locale LANG=$lang_utf8; then
            configure_locale_var "LANG" "$lang_utf8" "LANG"
            configure_locale_var "LANGUAGE" "$lang_utf8" "LANGUAGE"
         else
            printf "${RED}AVISO:${RESET} Falha ao configurar localectl. Verifique se o idioma fornecido é válido.\n"
            return 1
         fi
      else
         printf "${GREEN}=> Nenhuma alteração necessária. As variáveis de idioma já estão configuradas corretamente.${RESET}\n"
      fi
   else
      # Cria o arquivo /etc/locale.conf
      printf "${RED}AVISO:${RESET} O arquivo /etc/locale.conf não foi encontrado. Criando o arquivo...\n"
      echo "LANG=$lang_utf8" | sudo tee /etc/locale.conf
      echo "LANGUAGE=$lang_utf8" | sudo tee -a /etc/locale.conf
   fi

   # Carrega as variáveis de ambiente redefinidas
   printf "${CYAN}=> Carregando as variáveis de ambiente redefinidas.${RESET}\n"
   . /etc/locale.conf

   printf "=> ${BLUE}localectl status${RESET}\n"
   localectl status
   printf "=> ${MAGENTA}localectl list-locales${RESET}\n"
   localectl list-locales
   printf "=> ${GREEN}LANG     : %s${RESET}\n" "$LANG"
   printf "=> ${RED}LANGUAGE : %s${RESET}\n" "$LANGUAGE"
   printf "\n${RED}AVISO:${RESET} Sempre carregue o script usando o comando ${CYAN}source $0${RESET} para que as alterações reflitam no ambiente atual.\n\n"
}

# Verifica se o script foi carregado com o comando "source"
if [[ $0 != "$BASH_SOURCE" ]]; then
   if [[ $# -eq 1 ]]; then
      sh_main "$1"
   else
      printf "${RED}AVISO:${RESET} Forneça somente um parâmetro com a linguagem desejada.\n"
      printf "uso: source $0 pt_BR\n"
      printf "     source $0 en_US\n"
      printf "     source $0 es_ES\n"
   fi
else
   printf "${RED}AVISO:${RESET} Sempre carregue o script usando o comando ${CYAN}source $0${RESET} para que as alterações reflitam no ambiente atual.\n"
   printf "uso: source $0 pt_BR\n"
   printf "     source $0 en_US\n"
   printf "     source $0 es_ES\n"
fi

