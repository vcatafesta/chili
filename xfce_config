#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# shellcheck shell=bash disable=SC1091,SC2039,SC2166
#
#  xfce_config
#  Created: 2025/01/22 - 23:53
#  Altered: 2025/01/22 - 23:53
#
#  Copyright (c) 2025-2025, Vilmar Catafesta <vcatafesta@gmail.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##############################################################################
#export LANGUAGE=pt_BR
export TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAIN=xfce_config

# Definir a variável de controle para restaurar a formatação original
reset=$(tput sgr0)

# Definir os estilos de texto como variáveis
bold=$(tput bold)
underline=$(tput smul)   # Início do sublinhado
nounderline=$(tput rmul) # Fim do sublinhado
reverse=$(tput rev)      # Inverte as cores de fundo e texto

# Definir as cores ANSI como variáveis
black=$(tput bold)$(tput setaf 0)
red=$(tput bold)$(tput setaf 196)
green=$(tput bold)$(tput setaf 2)
yellow=$(tput bold)$(tput setaf 3)
blue=$(tput setaf 4)
pink=$(tput setaf 5)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)
gray=$(tput setaf 8)
orange=$(tput setaf 202)
purple=$(tput setaf 125)
violet=$(tput setaf 61)
light_red=$(tput setaf 9)
light_green=$(tput setaf 10)
light_yellow=$(tput setaf 11)
light_blue=$(tput setaf 12)
light_magenta=$(tput setaf 13)
light_cyan=$(tput setaf 14)
bright_white=$(tput setaf 15)

#debug
export PS4='${red}${0##*/}${green}[$FUNCNAME]${pink}[$LINENO]${reset}'
#set -x
#set -e
shopt -s extglob

#system
declare APP="${0##*/}"
declare _VERSION_="1.0.0-20250122"
declare distro="$(uname -n)"
declare DEPENDENCIES=(tput)
source /usr/share/fetch/core.sh

MostraErro() {
  echo "erro: ${red}$1${reset} => comando: ${cyan}'$2'${reset} => result=${yellow}$3${reset}"
}
trap 'MostraErro "$APP[$FUNCNAME][$LINENO]" "$BASH_COMMAND" "$?"; exit 1' ERR

# Nome do arquivo de dump
DUMP_FILE="xfconf-dump.txt"

# Função para exportar as configurações
export_xfce_config() {
  echo "Exportando configurações do XFCE para $DUMP_FILE..."
  # Limpa o arquivo anterior (se existir)
  > "$DUMP_FILE"

  # Lista todos os canais do xfconf
  channels=$(xfconf-query -l)

  for channel in $channels; do
    echo "Canal: $channel" >> "$DUMP_FILE"
    xfconf-query -c "$channel" -l -v >> "$DUMP_FILE"
    echo "" >> "$DUMP_FILE"
  done

  echo "Exportação concluída. Arquivo salvo em $DUMP_FILE."
}

# Função para restaurar as configurações
restore_xfce_config() {
  if [[ ! -f $DUMP_FILE ]]; then
    echo "Erro: O arquivo $DUMP_FILE não foi encontrado. Certifique-se de que ele existe antes de restaurar."
    exit 1
  fi

  echo "Restaurando configurações do XFCE a partir de $DUMP_FILE..."
  local channel=""

  while read -r line; do
    if [[ $line =~ ^Canal:\ (.+) ]]; then
      # Extrai o canal atual
      channel="${BASH_REMATCH[1]}"
    elif [[ $line =~ ^/(.+)\:\ (.+) ]]; then
      # Extrai a propriedade e o valor
      property="/${BASH_REMATCH[1]}"
      value="${BASH_REMATCH[2]}"
      # Define o valor com xfconf-query
      xfconf-query -c "$channel" -p "$property" -s "$value"
    fi
  done < "$DUMP_FILE"

  echo "Restauração concluída."
}

# Função de ajuda
show_help() {
  echo "Uso: $0 [export|restore]"
  echo "  export   - Exporta as configurações do XFCE para o arquivo $DUMP_FILE."
  echo "  restore  - Restaura as configurações do XFCE a partir do arquivo $DUMP_FILE."
}

# Lógica principal
if [[ $# -ne 1 ]]; then
  show_help
  exit 1
fi

case $1 in
  export)
    export_xfce_config
    ;;
  restore)
    restore_xfce_config
    ;;
  *)
    show_help
    exit 1
    ;;
esac
