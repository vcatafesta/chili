#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# shellcheck shell=bash disable=SC1091,SC2039,SC2166
#
#  cores
#  Created: 2024/09/25 - 06:20
#  Altered: 2024/09/25 - 06:20
#
#  Copyright (c) 2024-2024, Vilmar Catafesta <vcatafesta@gmail.com>
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR AS IS'' AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
#  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
#  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
#  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
#  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
#  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##############################################################################
#export LANGUAGE=pt_BR
export TEXTDOMAINDIR=/usr/share/locale
export TEXTDOMAIN=cores

# Definir a variável de controle para restaurar a formatação original
reset=$(tput sgr0)

# Definir os estilos de texto como variáveis
bold=$(tput bold)
underline=$(tput smul)   # Início do sublinhado
nounderline=$(tput rmul) # Fim do sublinhado
reverse=$(tput rev)      # Inverte as cores de fundo e texto

# Definir as cores ANSI como variáveis
black=$(tput bold)$(tput setaf 0)
red=$(tput bold)$(tput setaf 196)
green=$(tput bold)$(tput setaf 2)
yellow=$(tput bold)$(tput setaf 3)
blue=$(tput setaf 4)
pink=$(tput setaf 5)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)
gray=$(tput setaf 8)
orange=$(tput setaf 202)
purple=$(tput setaf 125)
violet=$(tput setaf 61)
light_red=$(tput setaf 9)
light_green=$(tput setaf 10)
light_yellow=$(tput setaf 11)
light_blue=$(tput setaf 12)
light_magenta=$(tput setaf 13)
light_cyan=$(tput setaf 14)
bright_white=$(tput setaf 15)

#debug
export PS4='${red}${0##*/}${green}[$FUNCNAME]${pink}[$LINENO]${reset}'
#set -x
#set -e
shopt -s extglob

#system
declare APP="${0##*/}"
declare _VERSION_="1.0.0-20240925"
declare distro="$(uname -n)"
declare DEPENDENCIES=(tput)
source /usr/share/fetch/core.sh

MostraErro() {
  echo "erro: ${red}$1${reset} => comando: ${cyan}'$2'${reset} => result=${yellow}$3${reset}"
}
trap 'MostraErro "$APP[$FUNCNAME][$LINENO]" "$BASH_COMMAND" "$?"; exit 1' ERR

# Define a variável para resetar as cores
reset=$(tput sgr0)

# Imprime a paleta de cores foreground e background
for i in {0..255}; do
  # Foreground
  fg_color=$(tput setaf $i)
  # Background
  bg_color=$(tput setab $i)

  # Imprime a cor correspondente com seu número
  echo -e "${fg_color}Texto cor ${i}${reset} | ${bg_color}Fundo cor ${i}${reset}"
done

# Definir as cores com nomes conhecidos para foreground (texto)
black=$(tput setaf 0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)
bright_black=$(tput setaf 8)
bright_red=$(tput setaf 9)
bright_green=$(tput setaf 10)
bright_yellow=$(tput setaf 11)
bright_blue=$(tput setaf 12)
bright_magenta=$(tput setaf 13)
bright_cyan=$(tput setaf 14)
bright_white=$(tput setaf 15)

# Cores estendidas da paleta 256 (foreground)
orange=$(tput setaf 214)
pink=$(tput setaf 205)
violet=$(tput setaf 93)
light_green=$(tput setaf 120)
dark_cyan=$(tput setaf 30)

# Definir as cores de background com nomes conhecidos
bg_black=$(tput setab 0)
bg_red=$(tput setab 1)
bg_green=$(tput setab 2)
bg_yellow=$(tput setab 3)
bg_blue=$(tput setab 4)
bg_magenta=$(tput setab 5)
bg_cyan=$(tput setab 6)
bg_white=$(tput setab 7)
bg_bright_black=$(tput setab 8)
bg_bright_red=$(tput setab 9)
bg_bright_green=$(tput setab 10)
bg_bright_yellow=$(tput setab 11)
bg_bright_blue=$(tput setab 12)
bg_bright_magenta=$(tput setab 13)
bg_bright_cyan=$(tput setab 14)
bg_bright_white=$(tput setab 15)

# Variável para resetar as cores
reset=$(tput sgr0)

# Exemplo de uso
echo -e "${red}Texto em vermelho${reset}"
echo -e "${bg_blue}${white}Texto em branco com fundo azul${reset}"
echo -e "${orange}Texto em laranja (cor 214)${reset}"

# Define a variável para resetar as cores
reset=$(tput sgr0)

# Imprime a paleta de cores foreground e background com o código tput correspondente
for i in {0..255}; do
  # Foreground (texto)
  fg_color=$(tput setaf $i)
  # Background (fundo)
  bg_color=$(tput setab $i)

  # Imprime a cor correspondente com o comando tput e o número da cor
  echo -e "\$(tput setaf $i) = ${fg_color}Texto cor $i${reset} | \$(tput setab $i) = ${bg_color}Fundo cor $i${reset}"
done
