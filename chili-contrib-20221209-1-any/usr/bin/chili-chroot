#!/usr/bin/env bash

#  chili-chroot - chroot util compatible with:
#  Chili GNU/Linux - https://github.com/vcatafesta/ChiliOS
#  Chili GNU/Linux - https://chililinux.com
#  Chili GNU/Linux - https://chilios.com.br
#  MazonOS GNU/Linux - http://mazonos.com
#
#  Created: 2019/04/05
#  Altered: 2022/05/23
#
#  Copyright (c) 2019-2022, Vilmar Catafesta <vcatafesta@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

#  chili-chroot uses quite a few external programs during its execution. You
#  need to have at least the following installed for makepkg to function:
#     awk, bsdtar (libarchive), bzip2, coreutils, fakeroot, file, find (findutils),
#     gettext, gpg, grep, gzip, sed, tput (ncurses), xz
#########################################################################
LIBRARY=${LIBRARY:-'/usr/share/fetch'}
source /usr/lib/lsb/init-functions
source "$LIBRARY"/core.sh

chilichroot2()
{
   if [ $# -gt 0 ]; then
      CHROOTDIR="$1"
      log_wait_msg "Criando CHROOT on $CHROOTDIR"
      mkdir -pv $CHROOTDIR
      for i in /dev /dev/pts /proc /sys /run; do
         log_wait_msg "Binding $CHROOTDIR$i"
         sudo mount -B ${i} ${CHROOTDIR}${i}
      done
      log_wait_msg "Iniciando CHROOT at $CHROOTDIR"
      sudo chroot ${CHROOTDIR}
      log_wait_msg "Unbinding $CHROOTDIR"
      sudo umount -rl ${CHROOTDIR}/run
      sudo umount -rl ${CHROOTDIR}/sys
      sudo umount -rl ${CHROOTDIR}/proc
      sudo umount -rl ${CHROOTDIR}/dev/pts
      sudo umount -rl ${CHROOTDIR}/dev
      #sudo grub-install /dev/sdb
      #sudo update-grub /dev/sdb
   else
      echo "Uso: chili-chroot /mnt/full"
   fi
}

chrootmount()
{
   sudo mount "$@"
}

chilichroot()
{
   if test $# -ge 1; then
      CHROOTDIR="$1"
      [[ ${CHROOTDIR} = '.' ]] && CHROOTDIR=${PWD}
      log_wait_msg "Generate dirs in $CHROOTDIR"
      for i in /proc /sys /dev /dev/pts /dev/shm /run /tmp /hostrun; do
         mkdir -pv ${CHROOTDIR}${i}
      done
      log_wait_msg "Mounting on $CHROOTDIR"
      chrootmount proc "${CHROOTDIR}/proc" -t proc -o nosuid,noexec,nodev &&
      chrootmount sys "${CHROOTDIR}/sys" -t sysfs -o nosuid,noexec,nodev,ro &&
      chrootmount udev "${CHROOTDIR}/dev" -t devtmpfs -o mode=0755,nosuid &&
      chrootmount devpts "${CHROOTDIR}/dev/pts" -t devpts -o mode=0620,gid=5,nosuid,noexec &&
      chrootmount shm "${CHROOTDIR}/dev/shm" -t tmpfs -o mode=1777,nosuid,nodev &&
      chrootmount /run "${CHROOTDIR}/run" --bind &&
      chrootmount /run "${CHROOTDIR}/hostrun" --bind &&
      chrootmount tmp "${CHROOTDIR}/tmp" -t tmpfs -o mode=1777,strictatime,nodev,nosuid
      log_wait_msg "Iniciando CHROOT at $CHROOTDIR"
      sudo chroot ${CHROOTDIR}
      log_wait_msg "Unbinding $CHROOTDIR"
      sudo umount -r "${CHROOTDIR}/proc"
      sudo umount -r "${CHROOTDIR}/sys"
      sudo umount -r "${CHROOTDIR}/dev/pts"
      sudo umount -r "${CHROOTDIR}/dev/shm"
      sudo umount -r "${CHROOTDIR}/dev"
      sudo umount -r "${CHROOTDIR}/run"
      sudo umount -r "${CHROOTDIR}/hostrun"
      sudo umount -r "${CHROOTDIR}/tmp"
      #sudo grub-install /dev/sdb
      #sudo update-grub /dev/sdb
   else
      printf "ERROR: No chroot directory specified\n"
   fi
}

chilichroot "$@"
